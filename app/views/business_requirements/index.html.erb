<!-- Bootstrap CSS -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

<!-- jQuery and Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<h1>Business Requirements</h1>

<!-- Responsive Business Requirements UI -->

<div id="toggle-filters-btn" class="toggle-btn">Show Filters</div>
  <!-- Filters Section -->
  <div class="container">
    <div id="filters-container" class="card mt-3" style="display: none;">
      <div class="card-body">
        <form action="" method="get">
          <div class="row">
            <!-- Requirement Case Filter -->
            <div class="col-md-4 mb-3 filter-group">
              <label class="filter-label" for="requirement_case">Requirement Case:</label>
              <select name="requirement_case" id="requirement_case" class="form-control">
                <option value="">All</option>
                <% @requirement_case.each do |case_option| %>
                  <option value="<%= case_option %>" <%= 'selected' if params[:requirement_case] == case_option %>><%= case_option %></option>
                <% end %>
              </select>
            </div>
    
            <!-- Requirement Received From -->
            <div class="col-md-4 mb-3 filter-group">
              <label class="filter-label" for="requirement_received_from">Requirement Received From:</label>
              <select name="requirement_received_from" id="requirement_received_from" class="form-control">
                <option value="">All</option>
                <% @requirement_received_from.each do |source| %>
                  <option value="<%= source %>" <%= 'selected' if params[:requirement_received_from] == source %>><%= source %></option>
                <% end %>
              </select>
            </div>
    
            <!-- Project/Enhancement -->
            <div class="col-md-4 mb-3 filter-group">
              <label class="filter-label" for="project_enhancement">Project/Enhancement:</label>
              <select name="project_enhancement" id="project_enhancement" class="form-control">
                <option value="">All</option>
                <% @project_enhancement.each do |project| %>
                  <option value="<%= project %>" <%= 'selected' if params[:project_enhancement] == project %>><%= project %></option>
                <% end %>
              </select>
            </div>
    
            <!-- Priority Level -->
            <div class="col-md-4 mb-3 filter-group">
              <label class="filter-label" for="priority_level">Priority Level:</label>
              <select name="priority_level" id="priority_level" class="form-control">
                <option value="">All</option>
                <% @priority_level.each do |level| %>
                  <option value="<%= level %>" <%= 'selected' if params[:priority_level] == level %>><%= level %></option>
                <% end %>
              </select>
            </div>
    
            <!-- Status -->
            <div class="col-md-4 mb-3 filter-group">
              <label class="filter-label" for="status">Status:</label>
              <select name="status" id="status" class="form-control">
                <option value="">All</option>
                <% @statuses.each do |status_option| %>
                  <option value="<%= status_option %>" <%= 'selected' if params[:status] == status_option %>><%= status_option %></option>
                <% end %>
              </select>
            </div>

            <div class="col-md-4 mb-3 filter-group">
              <label class="filter-label" for="status">Project Manager:</label>
              <select name="project_manager" id="status" class="form-control">
                <option value="">All</option>
                <% @project_manager_usernames.each do |username| %>
                  <option value="<%= username %>" <%= 'selected' if params[:project_manager] == username %>><%= username %></option>
                <% end %>
              </select>
            </div>

    
            <!-- Actions -->
            <div class="col-md-12 d-flex justify-content-end">
              <button type="submit" class="btn btn-primary mr-2">Filter</button>
              <button type="button" onclick="clearFilters()" class="btn btn-danger">Clear</button>
              <button type="button" onclick="exportToCsv()" class="btn btn-success mr-2">Export as CSV</button>
              <%= link_to 'New Business Requirement', new_business_requirement_path, class: 'btn btn-primary' %>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>
  

<br>
<table>
  <thead>
    <tr>
      <th class='export-csv'>Identifier</th>
      <th class='export-csv'>Requirement Case</th>
      <th class='export-csv'>Description</th>
      <th class='export-csv'>Requirement Received From</th>
      <th class='export-csv'>Project/Enhancement</th>
      <th class='export-csv'>Priority Level</th>
      <th class='export-csv'>Status</th>
      <th class='export-csv'>Program Manager</th>
      <th colspan="3">Actions</th>
    </tr>
  </thead>
  <tbody>
    <% if @business_requirements.blank? %>
        <tr><td colspan=6 style="text-align: center">No recorods to Display</td></tr>
    <% else %>
      <% @business_requirements.each do |business_requirement| %>
          
        <tr>
          <td class='export-csv'><%= business_requirement.identifier %></td>
          <td class='export-csv'><%= business_requirement.requirement_case %></td>
          <td class='export-csv'><%= business_requirement.description %></td>
          <td class='export-csv'><%= business_requirement.requirement_received_from.reject(&:blank?).join(", ") %></td>
          <td class='export-csv'><%= business_requirement.project_enhancement %></td>
          <td class='export-csv'><%= business_requirement.priority_level %></td>
          <td class='export-csv'><%= BusinessRequirement::STATUS_MAP[business_requirement.status] %></td>
          <td class='export-csv'>
          <% grouped_stakeholders = business_requirement.br_stakeholders
                                                        .group_by { |stakeholder| stakeholder.role.name }
                                                        .select { |role_name, _| role_name == 'Project Manager' } %>

          <ul>
            <% grouped_stakeholders.each do |role_name, stakeholders| %>
              <%= stakeholders.map { |stakeholder| stakeholder.user.name }.join(', ') %>
              
            <% end %>
          </ul>
        </td>

          <td>
            <%= link_to 'Show', business_requirement_path(business_requirement), class: 'btn btn-info btn-sm', title: 'Show Business Requirement' %>
            <% if business_requirement.status == 7 %>
              <%= content_tag(:span, 'Accepted', class: 'badge badge-success') %>
            <% elsif business_requirement.status == 8 %>
              <%= content_tag(:span, 'Declined', class: 'badge badge-danger') %>
            <% elsif business_requirement.status == 6 %>
              <%= content_tag(:span, 'Requirement On Hold', class: 'badge badge-primary') %>
            <% else %>
            <% user_stakeholders = business_requirement.br_stakeholders.where(user_id: User.current.id) %>
            <% pmo_role_present = user_stakeholders.any? { |stakeholder| stakeholder.role.name == 'PMO' } %>

            <% if pmo_role_present || User.current.admin? %>
              <%= link_to 'Accept', '#', class: 'btn btn-success btn-sm', title: 'Accept Business Requirement', data: { toggle: 'modal', target: "#acceptModal-#{business_requirement.id}" } %>
              <%= link_to 'Decline', decline_business_requirement_path(business_requirement), method: :patch, class: 'btn btn-danger btn-sm', title: 'Decline Business Requirement' %>
              <%= link_to 'Hold', hold_business_requirement_path(business_requirement), method: :patch, class: 'btn btn-danger btn-sm', title: 'Hold Business Requirement' %>
            <% end %>
            <% end %>
          </td>
        </tr>

        <!-- Accept Modal -->
        <div class="modal fade" id="acceptModal-<%= business_requirement.id %>" tabindex="-1" role="dialog" aria-labelledby="acceptModalLabel" aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="acceptModalLabel">Accept Business Requirement</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <%= labelled_form_for(business_requirement, url: accept_business_requirement_path(business_requirement), method: :patch, html: { id: "acceptForm-#{business_requirement.id}" }) do |f| %>
                  <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
              <%= hidden_field_tag :id, business_requirement.id %>

              <p><%= f.text_field :requirement_case, size: 60, class: 'form-control', placeholder: 'Enter the requirement_case here', required: true if business_requirement.requirement_case.blank? %></p>
              <p><%= f.text_field :identifier, size: 30, class: 'form-control', placeholder: 'the identifier generate automatically', required: true, disabled: true  if business_requirement.identifier.blank? %></p>
              <p><%= f.text_area :description, rows: 4, class: 'form-control', placeholder: 'Describe the Business Requirement here', required: true   if business_requirement.description.blank? %></p>
              <p><%= f.text_field :cost_benefits, rows: 1, class: 'form-control', placeholder: 'Enter the cost benefits here' if business_requirement.cost_benefits.blank? %></p>
              <p><%= f.select :status, options_for_select(BusinessRequirement::STATUS_MAP.map { |k, v| [v, k] }, business_requirement.status), {}, class: 'form-control' if business_requirement.status.blank? %></p>
              <p><%= f.text_field :project_sponsor, rows: 1, class: 'form-control', placeholder: 'Enter project sponsor here' if business_requirement.project_sponsor.blank? %></p>
              <% if business_requirement.project_category.blank? %>
              <p><%= f.select :project_category, options_for_select([['', '']] + @project_categories.map { |category| [category, category] }, business_requirement.project_category), {}, class: 'form-control', required: true %>
                <p class="text-danger">This field is required.</p>
              <% end %></p>
              <% if business_requirement.priority_level.blank? %>
              <p><%= f.select :priority_level, options_for_select([['', '']] + @priority_level.map { |level| [level, level] }, business_requirement.priority_level), {}, class: 'form-control', required: true %>
                <p class="text-danger">This field is required.</p>
              <% end %></p>
              <p><%= f.select :template, options_for_select([['', '']] + @template.map { |template| [template, template] }, business_requirement.template), {}, class: 'form-control' if business_requirement.template.blank? %></p>
              <% if business_requirement.portfolio_category.all?(&:blank?) %>
              <p><%= f.select :portfolio_category, options_for_select(@portfolio_categories, business_requirement.portfolio_category), {}, { multiple: true, class: 'form-control', prompt: '' } %><p class="text-danger">This field is required.</p>
              <% end %></p>
              <% if business_requirement.requirement_received_from.all?(&:blank?) %>
              <p><%= f.select :requirement_received_from, options_for_select(@requirement_received_from, business_requirement.requirement_received_from), {}, { multiple: true, class: 'form-control', prompt: '' } %><p class="text-danger">This field is required.</p>
              <% end %></p>
              <p><%= f.select :application_name, options_for_select(@application_name, business_requirement.application_name), {}, { multiple: true, class: 'form-control', prompt: '' } if business_requirement.application_name.all?(&:blank?) %></p>

              <div class="row">
                <div class="col-md-6">
                  <p><%= f.date_field :requirement_submitted_date, required: true, class: 'form-control' if business_requirement.requirement_submitted_date.blank? %></p>
                  <p><%= f.date_field :scheduled_end_date, class: 'form-control' if business_requirement.scheduled_end_date.blank? %></p>
                </div>
              </div>
              <p><%= f.text_area(:business_need_as_per_business_case, rows: 2, required: true, class: 'form-control', placeholder: 'State the business need here') if business_requirement.business_need_as_per_business_case.blank? %></p>
              <p><%= f.check_box :is_it_project, label: "Is IT Project?", required: true, class: 'form-check-input' if business_requirement.is_it_project.blank? %></p>
              <div >
                <%= f.submit 'Submit', class: 'btn btn-primary' %>
              </div>
            <% end %>
              </div>

            </div>
          </div>
        </div>
      <% end %>
    <% end %>
  </tbody>
</table>
<% begin %>
  <% if @business_requirements.present? && @business_requirements.respond_to?(:current_page) %>
    <span class="pagination"><%= will_paginate @business_requirements, @business_requirements.count %></span>
  <% else %>
  <% end %>
<% rescue StandardError => e %>
  <div class="alert alert-warning" role="alert">
  </div>
  <% Rails.logger.error "Pagination Error: #{e.message}" %>
<% end %>

<style>
.container {
  margin-top: 10px;
  font-size: 9px;
  display: flex;
}
  .toggle-btn {
    display: inline-block;
    padding: 6px 12px; /* Smaller padding */
    border: 1px solid #ccc;
    border-radius: 20px; /* Smaller rounded corners */
    font-size: 10px; /* Smaller font size */
    font-weight: 400; /* Reduced font weight */
    cursor: pointer;
    background-color: #f1f1f1;
    color: #333;
    text-align: center;
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Reduced shadow size */
  }

  .toggle-btn:hover {
    background-color: #e0e0e0;
    transform: translateY(-1px);
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1); /* Slightly enhanced shadow */
  }

  .toggle-btn:focus {
    outline: none;
    box-shadow: 0 0 5px 2px rgba(0, 0, 255, 0.5);
  }

  #toggle-filters-btn, #toggle-rag-btn {
    float: right;
    background-color: #f1f1f1;
  }
  *{
    font-size: 12px;
  }
  @media (min-width: 768px) {
    .container-1,
    .container-2 {
      width: 45%;
      margin-left: 2.5%;
    }

    .form-container {
      width: 100%;
    }
  }

  @media (min-width: 1200px) {
    .container-1,
    .container-2 {
      width: 45%;
      margin-left: 2.5%;
    }

    .form-container {
      width: 45%;
      margin-left: 2.5%;
    }
  }  
  table {
      border-collapse: collapse;
      width: 100%;
      font-family: Arial, sans-serif;
  }

  th, td {
      border: 1px solid #dddddd;
      padding: 8px;
      text-align: left;
      font-size: 14px;
  }

  th {
      background-color: #f9f9f9;
      font-weight: bold;
  }

  tr:nth-child(even) {
      background-color: #f2f2f2;
  }

  .btn {
      padding: 5px 10px;
      border: none;
      border-radius: 4px;
      text-decoration: none;
      margin: 2px;
  }

  .btn-custom-success {
      background-color: #28a745; /* Bootstrap green color */
      border-color: #28a745;
  }

  .btn-primary {
      background-color: #007bff;
      color: white;
  }

  .btn-info {
      background-color: #17a2b8;
      color: white;
  }

  .btn-warning {
      background-color: #ffc107;
      color: black;
  }

  .btn-danger {
      background-color: #dc3545;
      color: white;
  }

  .btn-sm {
      font-size: 12px;
  }
</style>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js" defer></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.0/FileSaver.min.js"></script>
<script>
  function exportToCsv() {
      // Utility function to wrap text at a specific width (if needed)
      function wrapText(text, maxWidth) {
          const words = text.split(' ');
          let wrappedText = '';
          let currentLine = '';

          words.forEach(word => {
              if ((currentLine + word).length > maxWidth) {
                  wrappedText += currentLine.trim() + '\n';
                  currentLine = word + ' ';
              } else {
                  currentLine += word + ' ';
              }
          });

          wrappedText += currentLine.trim();
          return wrappedText;
      }

      fetch('/business_requirements/export_all', { headers: { Accept: 'text/csv' } })
          .then(response => {
              if (!response.ok) {
                  throw new Error('Failed to fetch CSV data');
              }
              return response.text(); // Read response as plain text
          })
          .then(csvData => {
              // Ensure CSV columns with multi-word headers remain intact
              const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8' });
              saveAs(blob, 'business_requirements.csv');
          })
          .catch(error => {
              console.error('Error exporting data to CSV:', error);
          });
  }


  document.addEventListener('DOMContentLoaded', function() {
    // Attach event listener to the form's submit button
    document.querySelectorAll('form[id^="acceptForm-"]').forEach(function(form) {
      form.addEventListener('submit', function(event) {
        let isValid = true;
        let fields = ['priority_level', 'scheduled_start_date', 'planned_project_go_live_date', 'function', 'portfolio_category', 'project_category'];
        
        fields.forEach(function(fieldId) {
          let field = form.querySelector(`#${fieldId}`);
          if (field && !field.value.trim()) {
            isValid = false;
            field.classList.add('is-invalid'); // Add error styling (you need to define this class in your CSS)
          } else {
            field.classList.remove('is-invalid');
          }
        });

        if (!isValid) {
          event.preventDefault(); // Prevent form submission
          alert('Please fill in all required fields.');
        }
      });
    });
  });

</script>

<script>
  function toggleDisplay(buttonId, containerId, showText, hideText) {
    const button = document.getElementById(buttonId);
    const container = document.getElementById(containerId);
    
    if (container.style.display === 'none' || container.style.display === '') {
        container.style.display = 'block';
        button.textContent = hideText;
    } else {
        container.style.display = 'none';
        button.textContent = showText;
    }
  }

  document.getElementById('toggle-filters-btn').addEventListener('click', function () {
    toggleDisplay('toggle-filters-btn', 'filters-container', 'Hide Filters', 'Show Filters');
  });

  document.getElementById('toggle-rag-btn').addEventListener('click', function () {
    toggleDisplay('toggle-rag-btn', 'rag-container', 'Hide RAG Status', 'Show RAG Status');
  });

</script>